swagger: '2.0'

info:
  version: "1.0.0"
  title: Visualization API
securityDefinitions:
  userApiToken:
    type: apiKey
    in: header
    name: X-Auth-Token
  adminApiToken:
    type: apiKey
    in: header
    name: X-Auth-Token
basePath: /v1
# Describe your paths here
paths:
  /auth/openstack:
    get:
      description: Authenticate using keystone token
      tags:
        - auth
      parameters:
        -
          name: X-OpenStack-Auth-Token
          in: header
          type: string
          required: true
          description: OpenStack token with project scope
      responses:
        200:
          description: Token response contains token payload and JWT
          schema:
            $ref: "#/definitions/TokenResponse"
        401:
          description: |
            Unauthorized.
            Token is invalid or expired.
          schema:
            $ref: "#/definitions/Error"

  /datasources:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Gets `Datasource` objects.
      # This is array of GET operation parameters:
      tags:
        - datasource
      security:
        - userApiToken: []
      parameters:
        -
          name: name
          in: query
          type: string
          required: false
          description: "Datasource name to filter by"
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Datasource"
    post:
      description: "Registers new `Datasource`"
      tags:
        - datasource
      security:
        - userApiToken: []
      parameters:
        - in: body
          name: body
          description: Datasource defintion to add
          required: true
          schema:
            $ref: "#/definitions/Datasource"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Datasource"
        409:
          description: Conflict datasource
          schema:
            $ref: "#/definitions/Error"
  /datasources/{datasourceId}:
    get:
      description: Returns datasource by id
      tags:
        - datasource
      security:
        - userApiToken: []
      parameters:
        -
          name: datasourceId
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Datasource"
    delete:
      description: "Deletes existing datasource"
      tags:
        - datasource
      security:
        - userApiToken: []
      parameters:
       -
          name: datasourceId
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Datasource"
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/Error"
  /visualizations:
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Gets `Visualizations` objects.
      # This is array of GET operation parameters:
      tags:
        - visualization
      security:
        - userApiToken: []
      parameters:
        -
          name: name
          in: query
          type: string
          required: false
          description: "Visualizaion name to filter by"
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Visualization"
    post:
      description: "Creates new `Visualization`"
      tags:
        - visualization
      security:
        - userApiToken: []
      parameters:
        - in: body
          name: body
          description: Visualization defintion to add
          required: true
          schema:
            $ref: "#/definitions/Datasource"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Visualization"
        409:
          description: Conflict datasource
          schema:
            $ref: "#/definitions/Error"
  /visualization/{visualizationId}:
    delete:
      description: "Deletes existing visuzualization"
      tags:
        - visualization
      security:
        - userApiToken: []
      parameters:
        -
          name: visualizationId
          in: path
          type: string
          required: true
          description: "Visualizaion ID"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Visualization"
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/Error"
  /templates:
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Gets `Templates` objects.
      # This is array of GET operation parameters:
      tags:
        - templates
      security:
        - userApiToken: []
      parameters:
        -
          name: name
          in: query
          type: string
          required: false
          description: "Template name to filter by"
        -
          name: version
          in: query
          type: integer
          required: false
          description: "Template versiob name to filter by"
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Template"
    post:
      description: "Creates new `template`"
      tags:
        - templates
      security:
        - userApiToken: []
      parameters:
        - in: body
          name: body
          description: Template defintion to add
          required: true
          schema:
            $ref: "#/definitions/Template"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Template"
  /template/{templateId}:
    delete:
      description: "Deletes existing visuzualization"
      tags:
        - templates
      security:
        - userApiToken: []
      parameters:
        -
          name: templateId
          in: path
          type: string
          required: true
          description: "Template ID"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Template"
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/Error"
  /admin/organizations:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Gets `Organizations` objects.
      # This is array of GET operation parameters:
      tags:
        - admin
      security:
        - adminApiToken: []
      parameters:
        -
          name: name
          in: query
          type: string
          required: false
          description: "Organization name to filter by"
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Organization"
    post:
      description: "Registers new `Organization`"
      tags:
        - admin
      security:
        - userApiToken: []
      parameters:
        - in: body
          name: body
          description: Ogranization defintion to add
          required: true
          schema:
            $ref: "#/definitions/Organization"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Organization"
        409:
          description: Conflict datasource
          schema:
            $ref: "#/definitions/Error"
  /admin/organization/{organizationId}:
    get:
      description: Returns ogranization by id
      tags:
        - admin
      security:
        - adminApiToken: []
      parameters:
        -
          name: organizationId
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Organization"
    delete:
      description: "Delete organization"
      tags:
        - admin
      security:
        - userApiToken: []
      parameters:
       -
          name: organizationId
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Organization"
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/Error"
  /admin/organization/{organizationId}/users:
    get:
      description: List of all users in organization
      tags:
        - admin
      security:
        - adminApiToken: []
      parameters:
        -
          name: organizationId
          type: string
          in: path
          required: true
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/UserInOrganization"
    post:
      description: adds  user to organization
      tags:
        - admin
      security:
        - adminApiToken: []
      parameters:
        -
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/UserInOrganization"
        -
          name: organizationId
          type: string
          in: path
          required: true
      responses:
        200:
          description: sdf
          schema:
            $ref: "#/definitions/UserInOrganization"
    delete:
      description: "Delete user from organization"
      tags:
        - admin
      security:
        - userApiToken: []
      parameters:
       -
          name: organizationId
          in: path
          type: string
          required: true
       -
          name: login
          in: query
          type: string
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/UserInOrganization"
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/Error"
  /admin/users:
    get:
      description: |
        Returns list of existing users
      tags:
        - admin
      security:
        - adminApiToken: []
      parameters:
        -
          name: login
          in: query
          type: string
          required: false
          description: "User's login to filter by"
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
    post:
      description: "Registers new `User`"
      tags:
        - admin
      security:
        - userApiToken: []
      parameters:
        - in: body
          name: body
          description: User defintion to add
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/User"
        409:
          description: Conflict datasource
          schema:
            $ref: "#/definitions/Error"
  /admin/user/{userId}:
    get:
      description: Returns user by id
      tags:
        - admin
      security:
        - adminApiToken: []
      parameters:
        -
          name: userId
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/User"
    delete:
      description: "Delete user"
      tags:
        - admin
      security:
        - userApiToken: []
      parameters:
       -
          name: userId
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/User"
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/Error"
definitions:
  Error:
    type: object
    properties:
      code:
        type: string
        description: "Unique error code"
      message:
        type: string
        description: "Human readable error message"
      details:
        type: string
        description: "Error technical details"
  Datasource:
    type: object
    properties:
      id:
        type: integer
        format: int64
      type:
        type: string
        enum: &DATASOURCE_TYPES
          - influxdb
          - unimplemented
      name:
        type: string
        description: Datasource name
      configuration:
        type: string
        description: specific to implementation datasource configuration in JSON format
      secrets:
        type: string
        description: specific to implementation secrets JSON
  Template:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        description: Template name
      parameters:
        type: string
        description: Template parameters in JSON format
      version:
        type: integer
        description: Template version number >=1
      templateBody:
        type: string
        description: Template text
  Dashboard:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        description: Dashboard name
      templateName:
        type: string
        description: Name of template to use for dashboard rendering
      templateVersion:
        type: integer
        description: Template version. Last by default
      templateParameters:
        type: string
        description: Template parameters to render in JSON
  Visualization:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        description: Visulalization name
      dashboards:
        type: array
        items:
          $ref: "#/definitions/Dashboard"
  Token:
    type: object
    properties:
      organizationId:
        type: string
        description: Organization id which token was issued for
      expiresAt:
        type: string
        format: date-time
        description: Time when current token will expire
      isAdmin:
        type: boolean
        description: Indicates if token has admin scope
  TokenResponse:
    type: object
    properties:
      token:
        $ref: "#/definitions/Token"
      jwt:
        type: string
        description: Token payload in JWT format
  User:
    type: object
    properties:
      userId:
        type: string
      name:
        type: string
      login:
        type: string
      email:
        type: string
        description: optional
  Organization:
    type: object
    properties:
      name:
        type: string
      organizationId:
        type: string
  UserInOrganization:
    description: Used for querying users in organization
    type: object
    properties:
      userId:
        type: string
      organizationId:
        type: string
      login:
        type: string
      email:
        type: string
      role:
        type: string
